package fr.bestdevelop.test;

import java.io.File;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Comment;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class Main2 {
	
	public static void main(String[] args) {
		final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
			
		try {
		    final DocumentBuilder builder = factory.newDocumentBuilder();
		    final Document document= builder.newDocument();
		    
		    final Element config = document.createElement("Config");
		    config.setAttribute("xmlns:xsd", "http://www.w3.org/2001/XMLSchema");
		    config.setAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		    document.appendChild(config);
		    
		    final Element appList = document.createElement("AppList");
		    config.appendChild(appList);
		    
		    final Element broadcastAddress = document.createElement("BroadcastAddress");
		    broadcastAddress.appendChild(document.createTextNode(""));
		    appList.appendChild(broadcastAddress);
		    
		    final Element dlcList = document.createElement("DlcList");
		    dlcList.appendChild(document.createTextNode(""));
		    appList.appendChild(dlcList);
		    
		    final Element directPatchList = document.createElement("DirectPatchList");
		    directPatchList.appendChild(document.createTextNode(""));
		    appList.appendChild(directPatchList);
		    
		    final Element iconPath = document.createElement("IconPath");
		    iconPath.appendChild(document.createTextNode(""));
		    appList.appendChild(iconPath);
		    
		    final Element gameName = document.createElement("GameName");
		    gameName.appendChild(document.createTextNode("HurtworldClient"));
		    appList.appendChild(gameName);
		    
		    final Element category = document.createElement("Category");
		    category.appendChild(document.createTextNode(""));
		    appList.appendChild(category);
		    
		    final Element path = document.createElement("Path");
		    path.appendChild(document.createTextNode("\\HurtworldClient.exe"));
		    appList.appendChild(path);
				
		    
		    
		    final TransformerFactory transformerFactory = TransformerFactory.newInstance();
		    final Transformer transformer = transformerFactory.newTransformer();
		    final DOMSource source = new DOMSource(document);
		    final StreamResult sortie = new StreamResult(new File("file.xml"));
		    //final StreamResult result = new StreamResult(System.out);
				
		    transformer.setOutputProperty(OutputKeys.VERSION, "1.0");
		    transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
		    transformer.setOutputProperty(OutputKeys.STANDALONE, "yes");			
		    		
		    transformer.setOutputProperty(OutputKeys.INDENT, "yes");
		    transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");
				
		    transformer.transform(source, sortie);	
		    
		    System.out.println("Finish");
		}
		catch (final ParserConfigurationException e) {
		    e.printStackTrace();
		}
		catch (TransformerConfigurationException e) {
		    e.printStackTrace();
		}
		catch (TransformerException e) {
		    e.printStackTrace();
		}			
	}
	
}
